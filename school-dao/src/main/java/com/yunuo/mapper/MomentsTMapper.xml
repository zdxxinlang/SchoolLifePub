<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunuo.mapper.MomentsTMapper" >
  <resultMap id="BaseResultMap" type="com.yunuo.po.MomentsT" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="pic" property="pic" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="goods" property="goods" jdbcType="BIGINT" />
    <result column="forward" property="forward" jdbcType="BIGINT" />
    <result column="favourite" property="favourite" jdbcType="BIGINT" />
    <result column="type1" property="type1" jdbcType="INTEGER" />
    <result column="type2" property="type2" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="AuthorID" property="authorid" jdbcType="BIGINT" />
    <result column="schoolID" property="schoolid" jdbcType="BIGINT" />
    <result column="countryLocID" property="countrylocid" jdbcType="BIGINT" />
    <result column="provinceLocID" property="provincelocid" jdbcType="BIGINT" />
    <result column="urbanLocID" property="urbanlocid" jdbcType="BIGINT" />
    <result column="cityLocID" property="citylocid" jdbcType="BIGINT" />
    <result column="ClassID" property="classid" jdbcType="BIGINT" />
    <result column="specialtyID" property="specialtyid" jdbcType="BIGINT" />
    <result column="academyID" property="academyid" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, content, pic, create_time, goods, forward, favourite, type1, type2, level, AuthorID, 
    schoolID, countryLocID, provinceLocID, urbanLocID, cityLocID, ClassID, specialtyID, 
    academyID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yunuo.po.MomentsTExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from moments_t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from moments_t
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from moments_t
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yunuo.po.MomentsTExample" >
    delete from moments_t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yunuo.po.MomentsT" >
    insert into moments_t (id, content, pic, 
      create_time, goods, forward, 
      favourite, type1, type2, 
      level, AuthorID, schoolID, 
      countryLocID, provinceLocID, urbanLocID, 
      cityLocID, ClassID, specialtyID, 
      academyID)
    values (#{id,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{goods,jdbcType=BIGINT}, #{forward,jdbcType=BIGINT}, 
      #{favourite,jdbcType=BIGINT}, #{type1,jdbcType=INTEGER}, #{type2,jdbcType=INTEGER}, 
      #{level,jdbcType=INTEGER}, #{authorid,jdbcType=BIGINT}, #{schoolid,jdbcType=BIGINT}, 
      #{countrylocid,jdbcType=BIGINT}, #{provincelocid,jdbcType=BIGINT}, #{urbanlocid,jdbcType=BIGINT}, 
      #{citylocid,jdbcType=BIGINT}, #{classid,jdbcType=BIGINT}, #{specialtyid,jdbcType=BIGINT}, 
      #{academyid,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.yunuo.po.MomentsT" >
    insert into moments_t
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="pic != null" >
        pic,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="goods != null" >
        goods,
      </if>
      <if test="forward != null" >
        forward,
      </if>
      <if test="favourite != null" >
        favourite,
      </if>
      <if test="type1 != null" >
        type1,
      </if>
      <if test="type2 != null" >
        type2,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="authorid != null" >
        AuthorID,
      </if>
      <if test="schoolid != null" >
        schoolID,
      </if>
      <if test="countrylocid != null" >
        countryLocID,
      </if>
      <if test="provincelocid != null" >
        provinceLocID,
      </if>
      <if test="urbanlocid != null" >
        urbanLocID,
      </if>
      <if test="citylocid != null" >
        cityLocID,
      </if>
      <if test="classid != null" >
        ClassID,
      </if>
      <if test="specialtyid != null" >
        specialtyID,
      </if>
      <if test="academyid != null" >
        academyID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goods != null" >
        #{goods,jdbcType=BIGINT},
      </if>
      <if test="forward != null" >
        #{forward,jdbcType=BIGINT},
      </if>
      <if test="favourite != null" >
        #{favourite,jdbcType=BIGINT},
      </if>
      <if test="type1 != null" >
        #{type1,jdbcType=INTEGER},
      </if>
      <if test="type2 != null" >
        #{type2,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="authorid != null" >
        #{authorid,jdbcType=BIGINT},
      </if>
      <if test="schoolid != null" >
        #{schoolid,jdbcType=BIGINT},
      </if>
      <if test="countrylocid != null" >
        #{countrylocid,jdbcType=BIGINT},
      </if>
      <if test="provincelocid != null" >
        #{provincelocid,jdbcType=BIGINT},
      </if>
      <if test="urbanlocid != null" >
        #{urbanlocid,jdbcType=BIGINT},
      </if>
      <if test="citylocid != null" >
        #{citylocid,jdbcType=BIGINT},
      </if>
      <if test="classid != null" >
        #{classid,jdbcType=BIGINT},
      </if>
      <if test="specialtyid != null" >
        #{specialtyid,jdbcType=BIGINT},
      </if>
      <if test="academyid != null" >
        #{academyid,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yunuo.po.MomentsTExample" resultType="java.lang.Integer" >
    select count(*) from moments_t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update moments_t
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.pic != null" >
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.goods != null" >
        goods = #{record.goods,jdbcType=BIGINT},
      </if>
      <if test="record.forward != null" >
        forward = #{record.forward,jdbcType=BIGINT},
      </if>
      <if test="record.favourite != null" >
        favourite = #{record.favourite,jdbcType=BIGINT},
      </if>
      <if test="record.type1 != null" >
        type1 = #{record.type1,jdbcType=INTEGER},
      </if>
      <if test="record.type2 != null" >
        type2 = #{record.type2,jdbcType=INTEGER},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.authorid != null" >
        AuthorID = #{record.authorid,jdbcType=BIGINT},
      </if>
      <if test="record.schoolid != null" >
        schoolID = #{record.schoolid,jdbcType=BIGINT},
      </if>
      <if test="record.countrylocid != null" >
        countryLocID = #{record.countrylocid,jdbcType=BIGINT},
      </if>
      <if test="record.provincelocid != null" >
        provinceLocID = #{record.provincelocid,jdbcType=BIGINT},
      </if>
      <if test="record.urbanlocid != null" >
        urbanLocID = #{record.urbanlocid,jdbcType=BIGINT},
      </if>
      <if test="record.citylocid != null" >
        cityLocID = #{record.citylocid,jdbcType=BIGINT},
      </if>
      <if test="record.classid != null" >
        ClassID = #{record.classid,jdbcType=BIGINT},
      </if>
      <if test="record.specialtyid != null" >
        specialtyID = #{record.specialtyid,jdbcType=BIGINT},
      </if>
      <if test="record.academyid != null" >
        academyID = #{record.academyid,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update moments_t
    set id = #{record.id,jdbcType=BIGINT},
      content = #{record.content,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      goods = #{record.goods,jdbcType=BIGINT},
      forward = #{record.forward,jdbcType=BIGINT},
      favourite = #{record.favourite,jdbcType=BIGINT},
      type1 = #{record.type1,jdbcType=INTEGER},
      type2 = #{record.type2,jdbcType=INTEGER},
      level = #{record.level,jdbcType=INTEGER},
      AuthorID = #{record.authorid,jdbcType=BIGINT},
      schoolID = #{record.schoolid,jdbcType=BIGINT},
      countryLocID = #{record.countrylocid,jdbcType=BIGINT},
      provinceLocID = #{record.provincelocid,jdbcType=BIGINT},
      urbanLocID = #{record.urbanlocid,jdbcType=BIGINT},
      cityLocID = #{record.citylocid,jdbcType=BIGINT},
      ClassID = #{record.classid,jdbcType=BIGINT},
      specialtyID = #{record.specialtyid,jdbcType=BIGINT},
      academyID = #{record.academyid,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yunuo.po.MomentsT" >
    update moments_t
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goods != null" >
        goods = #{goods,jdbcType=BIGINT},
      </if>
      <if test="forward != null" >
        forward = #{forward,jdbcType=BIGINT},
      </if>
      <if test="favourite != null" >
        favourite = #{favourite,jdbcType=BIGINT},
      </if>
      <if test="type1 != null" >
        type1 = #{type1,jdbcType=INTEGER},
      </if>
      <if test="type2 != null" >
        type2 = #{type2,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="authorid != null" >
        AuthorID = #{authorid,jdbcType=BIGINT},
      </if>
      <if test="schoolid != null" >
        schoolID = #{schoolid,jdbcType=BIGINT},
      </if>
      <if test="countrylocid != null" >
        countryLocID = #{countrylocid,jdbcType=BIGINT},
      </if>
      <if test="provincelocid != null" >
        provinceLocID = #{provincelocid,jdbcType=BIGINT},
      </if>
      <if test="urbanlocid != null" >
        urbanLocID = #{urbanlocid,jdbcType=BIGINT},
      </if>
      <if test="citylocid != null" >
        cityLocID = #{citylocid,jdbcType=BIGINT},
      </if>
      <if test="classid != null" >
        ClassID = #{classid,jdbcType=BIGINT},
      </if>
      <if test="specialtyid != null" >
        specialtyID = #{specialtyid,jdbcType=BIGINT},
      </if>
      <if test="academyid != null" >
        academyID = #{academyid,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yunuo.po.MomentsT" >
    update moments_t
    set content = #{content,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      goods = #{goods,jdbcType=BIGINT},
      forward = #{forward,jdbcType=BIGINT},
      favourite = #{favourite,jdbcType=BIGINT},
      type1 = #{type1,jdbcType=INTEGER},
      type2 = #{type2,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      AuthorID = #{authorid,jdbcType=BIGINT},
      schoolID = #{schoolid,jdbcType=BIGINT},
      countryLocID = #{countrylocid,jdbcType=BIGINT},
      provinceLocID = #{provincelocid,jdbcType=BIGINT},
      urbanLocID = #{urbanlocid,jdbcType=BIGINT},
      cityLocID = #{citylocid,jdbcType=BIGINT},
      ClassID = #{classid,jdbcType=BIGINT},
      specialtyID = #{specialtyid,jdbcType=BIGINT},
      academyID = #{academyid,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>